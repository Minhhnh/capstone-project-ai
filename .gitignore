temp.txt
app/logger/*
!app/logger/logger.py
app/resources/*
!app/resources/.keep
.env
venv
repositories
interrogate
app/ml/models


# Created by https://www.toptal.com/developers/gitignore/api/pycharm,python,jupyternotebooks,vscode,visualstudiocode
# Edit at https://www.toptal.com/developers/gitignore?templates=pycharm,python,jupyternotebooks,vscode,visualstudiocode

### JupyterNotebooks ###
# gitignore template for Jupyter Notebooks
# website: http://jupyter.org/

.ipynb_checkpoints
*/.ipynb_checkpoints/*

# IPython
profile_default/
ipython_config.py

# Remove previous ipynb_checkpoints
#   git rm -r .ipynb_checkpoints/

### PyCharm ###
# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm and Rider
# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839

# User-specific stuff
.idea/

# CMake
cmake-build-*/

# File-based project format
*.iws

# IntelliJ
out/
# JIRA plugin
atlassian-ide-plugin.xml

# Crashlytics plugin (for Android Studio and IntelliJ)
com_crashlytics_export_strings.xml
crashlytics.properties
crashlytics-build.properties
fabric.properties


### Python ###
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
<<<<<<< HEAD
lib/
lib64/
=======
>>>>>>> Add interrogate path
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
<<<<<<< HEAD
=======
pytestdebug.log
>>>>>>> Add interrogate path

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/
<<<<<<< HEAD
=======
doc/_build/
>>>>>>> Add interrogate path

# PyBuilder
target/

# Jupyter Notebook
<<<<<<< HEAD
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py
=======

# IPython
>>>>>>> Add interrogate path

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

<<<<<<< HEAD
=======
# poetry
#poetry.lock

>>>>>>> Add interrogate path
# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
<<<<<<< HEAD
.env
.venv
=======
# .env
.env_example/
.venv/
>>>>>>> Add interrogate path
env/
venv/
ENV/
env.bak/
venv.bak/
<<<<<<< HEAD
=======
pythonenv*
>>>>>>> Add interrogate path

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/
<<<<<<< HEAD
=======

# pytype static type analyzer
.pytype/

# operating system-related files
# file properties cache/storage on macOS
*.DS_Store
# thumbnail cache on Windows
Thumbs.db

# profiling data
.prof


### VisualStudioCode ###
.vscode/*
!.vscode/tasks.json
!.vscode/launch.json
*.code-workspace

### VisualStudioCode Patch ###
# Ignore all local history of files
.history
.ionide

### vscode ###
!.vscode/settings.json
!.vscode/extensions.json

# file
*.csv
*.json
*.joblib
*.joblib.dat
*.npy
*.xlsx

# End of https://www.toptal.com/developers/gitignore/api/pycharm,python,jupyternotebooks,vscode,visualstudiocode
>>>>>>> Add interrogate path
app/ml/params.txt
.gitignore
localizations/Put localization files here.txt
test.py
app/ml/cache.json.lock
